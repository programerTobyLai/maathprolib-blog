<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python的mathprolib库--三角函数相关</title>
    <link href="/2020/07/05/Python-tringometry/"/>
    <url>/2020/07/05/Python-tringometry/</url>
    
    <content type="html"><![CDATA[<h2 id="三角函数相关"><a href="#三角函数相关" class="headerlink" title="三角函数相关"></a>三角函数相关</h2><h3 id="sin"><a href="#sin" class="headerlink" title="sin"></a>sin</h3><ul><li>功能：返回一个数的角度值正弦</li><li>可能返回的错误：</li><li><ul><li>无</li></ul></li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-keyword">from</span> mathprolib.simple <span class="hljs-keyword">import</span> *&gt;&gt;&gt;sin(<span class="hljs-number">90</span>)<span class="hljs-number">1</span>&gt;&gt;&gt;sin(<span class="hljs-number">30</span>)<span class="hljs-number">0.5</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python语言的mathprolib</title>
    <link href="/2020/07/05/python%E8%AF%AD%E8%A8%80%E7%9A%84mathprolib/"/>
    <url>/2020/07/05/python%E8%AF%AD%E8%A8%80%E7%9A%84mathprolib/</url>
    
    <content type="html"><![CDATA[<h2 id="基础函数"><a href="#基础函数" class="headerlink" title="基础函数"></a>基础函数</h2><h3 id="fact"><a href="#fact" class="headerlink" title="fact"></a>fact</h3><ul><li>功能：返回一个数的阶乘</li><li>可能返回的错误：</li><li><ul><li>AssertionError</li></ul></li><li><ul><li>引发这种错误的原因</li></ul></li><li><ul><li><ol><li>数字为负数</li></ol></li></ul></li><li><ul><li><ol start="2"><li>数字为小数<h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-keyword">from</span> mathprolib.simple <span class="hljs-keyword">import</span> *&gt;&gt;&gt;fact(<span class="hljs-number">5</span>)<span class="hljs-number">120</span>&gt;&gt;&gt;fact(<span class="hljs-number">-1</span>)AssertionError:Cannot get factorail to negative number&gt;&gt;&gt;fact(<span class="hljs-number">1.2</span>)AssertionError:the number should be int(<span class="hljs-keyword">or</span> int-like float) <span class="hljs-keyword">not</span> other</code></pre><h3 id="gcd"><a href="#gcd" class="headerlink" title="gcd"></a>gcd</h3></li></ol></li></ul></li><li>功能：返回两个数的最大公约数</li><li>可能返回的错误：</li><li><ul><li>无<h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-keyword">from</span> mathprolib.simple <span class="hljs-keyword">import</span> *&gt;&gt;&gt;gcd(<span class="hljs-number">12</span>,<span class="hljs-number">18</span>)<span class="hljs-number">6</span></code></pre><h3 id="lcm"><a href="#lcm" class="headerlink" title="lcm"></a>lcm</h3></li></ul></li><li>功能：返回两个数的最小公倍数</li><li>可能返回的错误：</li><li><ul><li>无<h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><pre><code class="hljs python">&gt;&gt;&gt;<span class="hljs-keyword">from</span> mathprolib.simple <span class="hljs-keyword">import</span> *&gt;&gt;&gt;lcm(<span class="hljs-number">12</span>,<span class="hljs-number">18</span>)<span class="hljs-number">36</span></code></pre><h3 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h3></li></ul></li><li>功能：返回一个数的自然对数</li><li>可能返回的错误：</li><li><ul><li>ValueError</li></ul></li><li><ul><li>反回错误的原因：</li></ul></li><li><ul><li><ul><li>参数是负数<h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><pre><code class="hljs python">&gt;&gt;&gt;&gt;&gt;&gt;<span class="hljs-keyword">from</span> mathprolib.simple <span class="hljs-keyword">import</span> *&gt;&gt;&gt;ln(e)<span class="hljs-number">1</span>&gt;&gt;&gt;ln(<span class="hljs-number">1</span>)<span class="hljs-number">0</span>&gt;&gt;&gt;ln(<span class="hljs-number">-1</span>)ValueError: math domain error</code></pre></li></ul></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速入门+安装</title>
    <link href="/2020/07/04/readme/"/>
    <url>/2020/07/04/readme/</url>
    
    <content type="html"><![CDATA[<h1 id="mathprolib"><a href="#mathprolib" class="headerlink" title="mathprolib"></a>mathprolib</h1><p><a href="https://gitee.com/index-1048576/mathlib/stargazers" target="_blank" rel="noopener"><img src="https://gitee.com/index-1048576/mathlib/badge/star.svg?theme=white" srcset="/img/loading.gif" alt="star"></a>  <a href="https://gitee.com/index-1048576/mathlib/members" target="_blank" rel="noopener"><img src="https://gitee.com/index-1048576/mathlib/badge/fork.svg?theme=white" srcset="/img/loading.gif" alt="fork"></a></p><p>10种编程语言通用的数学运算专用库，使用简单，内含三角学、分数、科学计算法等实用功能。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><table><thead><tr><th>编程语言</th><th>下载方法/命令</th></tr></thead><tbody><tr><td>Python</td><td>pip install mathprolib</td></tr><tr><td>Go</td><td>go get -u github.com/wrmdcxy/mathprolib</td></tr><tr><td>C</td><td>unknown</td></tr><tr><td>C++</td><td>unknown</td></tr><tr><td>Java</td><td>unknown</td></tr><tr><td>JavaScript</td><td>unknown</td></tr><tr><td>Ruby</td><td>unknown</td></tr><tr><td>Lua</td><td>unknown</td></tr><tr><td>Julia</td><td>unknown</td></tr><tr><td>Lisp</td><td>unknown</td></tr></tbody></table><h1 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h1><p>下面是分数运算的用法示例，这里以Python为例子</p><h3 id="分数运算和比较"><a href="#分数运算和比较" class="headerlink" title="分数运算和比较"></a>分数运算和比较</h3><p>下面的代码展现了mathprolib的<a href="https://baike.baidu.com/item/%E5%88%86%E6%95%B0/2067623#8" target="_blank" rel="noopener">分数的基本运算</a></p><pre><code class="hljs python"><span class="hljs-keyword">from</span> mathprolib.Fraction <span class="hljs-keyword">import</span> VulgarFraction,MixedFractionf1=VulgarFraction(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)<span class="hljs-comment">#三分之一</span>f2=MixedFraction(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<span class="hljs-comment">#一又三分之二</span>print(f1+f2)print(f1-f2)print(f1*f2)print(f1/f2)print(f1&gt;f2)print(f1&lt;f2)print(f1==f2)print(f1&gt;=VulgarFraction(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>))<span class="hljs-comment"># output:</span><span class="hljs-comment"># 2 </span><span class="hljs-comment">#</span><span class="hljs-comment"># -4</span><span class="hljs-comment"># —</span><span class="hljs-comment"># 3</span><span class="hljs-comment">#</span><span class="hljs-comment"># 5</span><span class="hljs-comment"># —</span><span class="hljs-comment"># 9</span><span class="hljs-comment">#</span><span class="hljs-comment"># 1</span><span class="hljs-comment"># —</span><span class="hljs-comment"># 5</span><span class="hljs-comment"># </span><span class="hljs-comment"># False</span><span class="hljs-comment"># True</span><span class="hljs-comment"># False</span><span class="hljs-comment"># True</span></code></pre><h3 id="约分、通分"><a href="#约分、通分" class="headerlink" title="约分、通分"></a>约分、通分</h3><p>下面展示了如何在mathprolib中<a href="https://baike.baidu.com/item/%E7%BA%A6%E5%88%86" target="_blank" rel="noopener">约分</a>、<a href="https://baike.baidu.com/item/%E9%80%9A%E5%88%86" target="_blank" rel="noopener">通分</a></p><pre><code class="hljs python"><span class="hljs-keyword">from</span> mathprolib.Fraction <span class="hljs-keyword">import</span> VulgarFraction,MixedFractionvgf1=VulgarFraction(<span class="hljs-number">5</span>,<span class="hljs-number">20</span>)<span class="hljs-comment"># 5/20</span>vgf1.reduction()<span class="hljs-comment">#约分至最简: 1/4</span>vgf2=VulgarFraction(<span class="hljs-number">4</span>,<span class="hljs-number">20</span>) <span class="hljs-comment">#4/20</span>vgf2.reduction(<span class="hljs-number">2</span>)<span class="hljs-comment">#用2约分: 2/10</span>vgf2.reduction(<span class="hljs-number">5</span>)<span class="hljs-comment">#用5约分，无法约分，抛出警告: WARNING:Reduction failed.Cannot reduction by 5</span>mxf1=MixedFraction(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>)<span class="hljs-comment"># 1 3/6</span>mxf1.reduction()<span class="hljs-comment">#约分至最简: 1 1/2</span>vgf3=VulgarFraction(<span class="hljs-number">1</span>,<span class="hljs-number">4</span>)mxf2=MixedFraction(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)mxf2=vgf3.common(mxf2)vgf3<span class="hljs-comment"># 3/12</span>mxf2<span class="hljs-comment"># 20/12</span></code></pre><h3 id="连分数"><a href="#连分数" class="headerlink" title="连分数"></a>连分数</h3><p>下面展示了如何在mathprolib中使用连分数</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> mathprolib.Fraction <span class="hljs-keyword">import</span> VulgarFraction,MixedFractionvgf1 = VulgarFraction(VulgarFraction(<span class="hljs-number">5</span>,<span class="hljs-number">2</span>),<span class="hljs-number">3</span>) <span class="hljs-comment"># 5/2/3 = 5/6</span>vgf2 = vgf1print(vgf1+vgf2) <span class="hljs-comment"># 5/3</span>print(vgf2-vgf1) <span class="hljs-comment"># 0</span>print(vgf1*vgf2) <span class="hljs-comment"># 25/36</span><span class="hljs-comment"># 带分数的连分数还在开发中</span></code></pre><h5 id="温馨小提示-不要使用mathprolib的Fraction来制作无穷级数，因为转float过程中需要递归qwq"><a href="#温馨小提示-不要使用mathprolib的Fraction来制作无穷级数，因为转float过程中需要递归qwq" class="headerlink" title="温馨小提示:不要使用mathprolib的Fraction来制作无穷级数，因为转float过程中需要递归qwq"></a><strong>温馨小提示:不要使用mathprolib的Fraction来制作无穷级数，因为转float过程中需要递归qwq</strong></h5><h1 id="科学计数法"><a href="#科学计数法" class="headerlink" title="科学计数法"></a>科学计数法</h1><p>下面是<a href="https://baike.baidu.com/item/%E7%A7%91%E5%AD%A6%E8%AE%B0%E6%95%B0%E6%B3%95/1612882" target="_blank" rel="noopener">科学计数法的用法示例</a>，这里以Python为例子</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> mathprolib <span class="hljs-keyword">import</span> Scientifics = Scientific.Scientific_notation(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>)print(s)print((a*a)**<span class="hljs-number">2</span>) <span class="hljs-comment">#相当于a**4的意思</span>print(a+<span class="hljs-number">666</span>)</code></pre><h1 id="无限小数"><a href="#无限小数" class="headerlink" title="无限小数"></a>无限小数</h1><p>暂时只能使用加法/比较<br>（以Python为例子）</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> mathprolib.Inf_digits_float <span class="hljs-keyword">import</span> InfDigitsFloata = InfDigitsFloat(<span class="hljs-string">"1.234"</span>)print(a+a)b = InfDigitsFloat(<span class="hljs-string">"1.2339"</span>)print(a&lt;b)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>初学者</tag>
      
      <tag>入门</tag>
      
      <tag>Python</tag>
      
      <tag>置顶</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
